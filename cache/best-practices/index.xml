<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Best Practices on Security365 Docs</title><link>https://panthere2k.github.io/cache/best-practices/</link><description>Recent content in Best Practices on Security365 Docs</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://panthere2k.github.io/cache/best-practices/index.xml" rel="self" type="application/rss+xml"/><item><title>Always Online</title><link>https://panthere2k.github.io/cache/best-practices/always-online/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://panthere2k.github.io/cache/best-practices/always-online/</guid><description>Always OnlineObserve the following best practices when enabling Always Online with Internet Archive integration.
Allow requests from the Internet Archive IP addresses. Origin servers receive requests from the Internet Archive IPs. Make sure you are not blocking requests from the Internet Archive IP range: 207.241.224.0/20 and 208.70.24.0/21. Be aware that the Internet Archive does not consider your origin server’s cache-control header. When the Internet Archive is crawling sites, it will crawl sites regardless of their cache-control, since the Internet Archive does not cache assets, but archives them.</description></item><item><title>Avoid web cache poisoning</title><link>https://panthere2k.github.io/cache/best-practices/avoid-web-poisoning/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://panthere2k.github.io/cache/best-practices/avoid-web-poisoning/</guid><description>Avoid Web Cache PoisoningA cache poisoning attack uses an HTTP request to trick an origin web server into responding with a harmful resource that has the same cache key as a clean request. As a result, the poisoned resource gets cached and served to other users.
A Content Delivery Network (CDN) like Cloudflare relies on cache keys to compare new requests against cached resources. The CDN then determines whether the resource should be served from the cache or requested directly from the origin web server.</description></item><item><title>Cache behavior</title><link>https://panthere2k.github.io/cache/best-practices/cache-behavior/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://panthere2k.github.io/cache/best-practices/cache-behavior/</guid><description>Cache behaviorIn this page, we document how Cloudflare&amp;rsquo;s cache system behaves in interaction with HEAD requests and with Set-Cookie response header.
&amp;#8203;​ Interaction of HEAD requests with Cache Cloudflare converts HEAD requests to GET requests for cacheable requests.
When you make a HEAD request for a cacheable resource and Cloudflare does not have that resource in the edge cache, a cache miss happens. Cloudflare will send a GET request to your origin, cache the full response and return the response headers only.</description></item><item><title>Cache performance</title><link>https://panthere2k.github.io/cache/best-practices/cache-performance/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://panthere2k.github.io/cache/best-practices/cache-performance/</guid><description>Cache performance &amp;#8203;​ Optimize cache ratios Depending on the cache status you receive, you can make modifications to improve your cache ratio. To review the list of cache statuses, refer to Cloudflare cache responses.
Dynamic: Default response for many file types including HTML. To cache additional content, refer to custom caching with page rules External link icon Open external link . Revalidated: To address an abnormal quantity of revalidated content, consider increasing your Edge Cache TTLs via a Page Rule or max-age origin directive.</description></item><item><title>Customize cache</title><link>https://panthere2k.github.io/cache/best-practices/customize-cache/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://panthere2k.github.io/cache/best-practices/customize-cache/</guid><description>Customize cacheSome possible combinations of origin web server settings and Cloudflare Page Rules include:
Create a directory for static content at your origin web server. For example, create a /static/ subdirectory at your origin web server and a Cache Everything Page Rule matching the *example.com/static/* URL pattern. Append a unique file extension to static pages. For example, create a .shtml file extension for resources at your origin web server and a Cache Everything Page Rule matching the *example.</description></item></channel></rss>