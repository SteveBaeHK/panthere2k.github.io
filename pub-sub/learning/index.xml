<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Learning on Security365 Docs</title><link>https://panthere2k.github.io/pub-sub/learning/</link><description>Recent content in Learning on Security365 Docs</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://panthere2k.github.io/pub-sub/learning/index.xml" rel="self" type="application/rss+xml"/><item><title>How Pub/Sub works</title><link>https://panthere2k.github.io/pub-sub/learning/how-pubsub-works/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://panthere2k.github.io/pub-sub/learning/how-pubsub-works/</guid><description>How Pub/Sub worksCloudflare Pub/Sub is a powerful way to send (publish) messages to and from remote clients.
There are four major concepts to understand with Pub/Sub:
Brokers and namespaces Authentication Topics and subscriptions Messages &amp;#8203;​ Brokers and namespaces Brokers and namespaces are fundamentally &amp;ldquo;containers&amp;rdquo; for organizing clients, topics, and their associated permissions.
A namespace is a collection of brokers that can be organized by location, end-customer, environment (production vs. staging), or by teams within an organization.</description></item><item><title>Integrate with Workers</title><link>https://panthere2k.github.io/pub-sub/learning/integrate-workers/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://panthere2k.github.io/pub-sub/learning/integrate-workers/</guid><description>Integrate with WorkersOnce of the most powerful features of Pub/Sub is the ability to connect Cloudflare Workers — powerful serverless functions that run on the edge — and filter, aggregate and mutate every message published to that broker. Workers can also mirror those messages to other sources, including writing to Cloudflare R2 storage, external databases, or other cloud services beyond Cloudflare, making it easy to persist or analyze incoming message payloads and data at scale.</description></item><item><title>Delivery guarantees</title><link>https://panthere2k.github.io/pub-sub/learning/delivery-guarantees/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://panthere2k.github.io/pub-sub/learning/delivery-guarantees/</guid><description>Delivery guaranteesDelivery guarantees or &amp;ldquo;delivery modes&amp;rdquo; define how strongly a messaging system enforces the delivery of messages it processes. Each mode comes with a number of trade-offs. As you make stronger guarantees about message delivery, the system needs to perform more checks and acknowledgments to ensure that messages are delivered, or maintain state to ensure a message is only delivered the specified number of times. This increases the latency of the system and reduces the overall throughput of the system.</description></item><item><title>Recommended client libraries</title><link>https://panthere2k.github.io/pub-sub/learning/client-libraries/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://panthere2k.github.io/pub-sub/learning/client-libraries/</guid><description>A list of client libraries vetted by Cloudflare.</description></item><item><title>Using Wrangler (Command Line Interface)</title><link>https://panthere2k.github.io/pub-sub/learning/command-line-wrangler/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://panthere2k.github.io/pub-sub/learning/command-line-wrangler/</guid><description>How to manage Pub/Sub with Wrangler, the Cloudflare CLI.</description></item><item><title>WebSockets and Browser Clients</title><link>https://panthere2k.github.io/pub-sub/learning/websockets-browsers/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://panthere2k.github.io/pub-sub/learning/websockets-browsers/</guid><description>Connect to Pub/Sub with WebSockets</description></item></channel></rss>