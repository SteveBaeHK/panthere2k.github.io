<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Cloudflare Image Resizing on Security365 Docs</title><link>https://panthere2k.github.io/images/image-resizing/</link><description>Recent content in Cloudflare Image Resizing on Security365 Docs</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://panthere2k.github.io/images/image-resizing/index.xml" rel="self" type="application/rss+xml"/><item><title>Enable Image Resizing</title><link>https://panthere2k.github.io/images/image-resizing/enable-image-resizing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://panthere2k.github.io/images/image-resizing/enable-image-resizing/</guid><description>Enable Image ResizingTo use Image Resizing you first need to enable it via the Speed app on your Cloudflare dashboard:
Log in to the Cloudflare dashboard External link icon Open external link and select your account. Go to Speed &amp;gt; Optimization. Under File Size Optimization, enable Image Resizing. If you do not want to resize images from any origin, uncheck Resize images from any origin. When unchecked, Image Resizing only resizes images in the enabled zone and prevents third-parties from resizing any image at any origin.</description></item><item><title>Formats and limitations</title><link>https://panthere2k.github.io/images/image-resizing/format-limitations/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://panthere2k.github.io/images/image-resizing/format-limitations/</guid><description>Supported formats and limitations &amp;#8203;​ Supported input formats JPEG PNG GIF (including animations) WebP (no animations) SVG &amp;#8203;​ Supported output formats JPEG PNG GIF (including animations) WebP (including animations) SVG AVIF &amp;#8203;​ Supported features Image Resizing can:
Resize and generate JPEG and PNG images, and optionally AVIF or WebP. Save animations as GIF or animated WebP. Support ICC color profiles in JPEG and PNG images. Preserve JPEG metadata (metadata of other formats is discarded).</description></item><item><title>URL format</title><link>https://panthere2k.github.io/images/image-resizing/url-format/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://panthere2k.github.io/images/image-resizing/url-format/</guid><description>URL formatYou can convert and resize images by requesting them via a specially-formatted URL. This way you do not need to write any code, only change HTML markup of your website to use the new URLs. The format is:
https://&amp;lt;ZONE&amp;gt;/cdn-cgi/image/&amp;lt;OPTIONS&amp;gt;/&amp;lt;SOURCE-IMAGE&amp;gt; Here is a breakdown of each part of the URL:
&amp;lt;ZONE&amp;gt;
Your domain name on Cloudflare. Unlike other third-party image resizing services, Image Resizing does not use a separate domain name for an API.</description></item><item><title>Responsive images</title><link>https://panthere2k.github.io/images/image-resizing/responsive-images/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://panthere2k.github.io/images/image-resizing/responsive-images/</guid><description>Responsive imagesThe srcset feature of HTML External link icon Open external link allows browsers to automatically choose an image that is best suited for user’s screen resolution.
srcset requires providing multiple resized versions of every image, and with Cloudflare’s Image Resizing this is an easy task to accomplish.
There are two different scenarios where it is useful to use srcset:
Images with a fixed size in terms of CSS pixels, but adapting to high-DPI screens (also known as Retina displays).</description></item><item><title>Resize with Cloudflare Workers</title><link>https://panthere2k.github.io/images/image-resizing/resize-with-workers/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://panthere2k.github.io/images/image-resizing/resize-with-workers/</guid><description>Resize with Cloudflare WorkersUsing Image Resizing with Workers gives you powerful programmatic control over every image request.
Here are a few examples of the flexibility Workers give you:
Use a custom URL scheme. Instead of specifying pixel dimensions in image URLs, use preset names such as thumbnail and large. Hide the actual location of the original image. You can store images in an external S3 bucket or a hidden folder on your server without exposing that information in URLs.</description></item><item><title>Draw overlays and watermarks</title><link>https://panthere2k.github.io/images/image-resizing/draw-overlays/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://panthere2k.github.io/images/image-resizing/draw-overlays/</guid><description>Draw overlays and watermarksYou can draw additional images on top of a resized image, with transparency and blending effects. This enables adding of watermarks, logos, signatures, vignettes, and other effects to resized images.
This feature is available only in Workers. To draw overlay images, add an array of drawing commands to options of fetch() requests. The drawing options are nested in options.cf.image.draw, like in the following example:
fetch(imageURL, { cf: { image: { width: 800, height: 600, draw: [ { url: &amp;#39;https://example.</description></item><item><title>Control origin access</title><link>https://panthere2k.github.io/images/image-resizing/control-origin-access/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://panthere2k.github.io/images/image-resizing/control-origin-access/</guid><description>Control origin accessYou can serve resized images without giving access to the original image. Images can be hosted on another server outside of your zone, and the true source of the image can be entirely hidden. The origin server may require authentication to disclose the original image, without needing visitors to be aware of it. Access to the full-size image may be prevented by making it impossible to manipulate resizing parameters.</description></item><item><title>Integration with frameworks</title><link>https://panthere2k.github.io/images/image-resizing/integration-with-frameworks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://panthere2k.github.io/images/image-resizing/integration-with-frameworks/</guid><description>Integration with frameworks &amp;#8203;​ Next.js Image Resizing can be used automatically with Next.js&amp;rsquo; next/image component External link icon Open external link . With a custom loader External link icon Open external link which applies Cloudflare Image Resizing, next/image will set an optimal width and quality for a given client.
import Image from &amp;#39;next/image&amp;#39;; const normalizeSrc = src =&amp;gt; { return src.startsWith(&amp;#39;/&amp;#39;) ? src.slice(1) : src; }; const cloudflareLoader = ({ src, width, quality }) =&amp;gt; { const params = [`width=${width}`]; if (quality) { params.</description></item><item><title>API reference</title><link/><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid/><description/></item></channel></rss>