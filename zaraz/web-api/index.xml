<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Web API on Security365 Docs</title><link>https://panthere2k.github.io/zaraz/web-api/</link><description>Recent content in Web API on Security365 Docs</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://panthere2k.github.io/zaraz/web-api/index.xml" rel="self" type="application/rss+xml"/><item><title>Track</title><link>https://panthere2k.github.io/zaraz/web-api/track/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://panthere2k.github.io/zaraz/web-api/track/</guid><description>TrackYou can use zaraz.track() anywhere inside the &amp;lt;body&amp;gt; tag of a page.
zaraz.track() allows you to track custom events on your website, that might happen in real time. It is an async function, so you can choose to await it if you would like to make sure it completed before running other code.
Example of user events you might be interested in tracking are successful sign-ups, calls-to-action clicks, or purchases.</description></item><item><title>Set</title><link>https://panthere2k.github.io/zaraz/web-api/set/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://panthere2k.github.io/zaraz/web-api/set/</guid><description>SetYou can use zaraz.set() anywhere inside the &amp;lt;body&amp;gt; tag of a page:
zaraz.set(key, value, [options]) Set is useful if you want to make a variable available in all your events without manually setting it every time you are using zaraz.track(). For the purpose of this example, assume users in your system have a unique identifier that you want to send to your tools. You might have many zaraz.track() calls all sharing this one parameter:</description></item><item><title>E-commerce</title><link>https://panthere2k.github.io/zaraz/web-api/ecommerce/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://panthere2k.github.io/zaraz/web-api/ecommerce/</guid><description>E-commerceYou can use zaraz.ecommerce() anywhere inside the &amp;lt;body&amp;gt; tag of a page.
zaraz.ecommerce() allows you to track common events of the e-commerce user journey, such as when a user adds a product to cart, starts the checkout funnel or completes an order on your website. It is an async function, so you can choose to await it if you would like to make sure it completed before running other code.</description></item><item><title>Debug mode</title><link>https://panthere2k.github.io/zaraz/web-api/debug-mode/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://panthere2k.github.io/zaraz/web-api/debug-mode/</guid><description>Debug modeZaraz offers a debug mode to troubleshoot the events and triggers systems. To activate debug mode you need to create a special debug cookie (zarazDebug) containing your debug key. You can set this cookie manually or via the zaraz.debug helper function available in your console.
Log in to the Cloudflare dashboard External link icon Open external link , and select your account and domain.
Go to Zaraz &amp;gt; Settings.</description></item></channel></rss>