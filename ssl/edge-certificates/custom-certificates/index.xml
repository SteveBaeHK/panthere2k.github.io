<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Custom certificates on Security365 Docs</title><link>https://panthere2k.github.io/ssl/edge-certificates/custom-certificates/</link><description>Recent content in Custom certificates on Security365 Docs</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://panthere2k.github.io/ssl/edge-certificates/custom-certificates/index.xml" rel="self" type="application/rss+xml"/><item><title>Manage custom certificates</title><link>https://panthere2k.github.io/ssl/edge-certificates/custom-certificates/uploading/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://panthere2k.github.io/ssl/edge-certificates/custom-certificates/uploading/</guid><description>Manage custom certificates &amp;#8203;​ Certificate requirements Certificates are parsed and checked for validity before being accepted. Each certificate uploaded must:
Be encoded in PEM format (PEM, PKCS#7, or PKCS#12), see Converting Using OpenSSL External link icon Open external link for conversion examples.
Not have a key file password.
Not be expiring in less than 14 days from time of upload.
Have a subject alternative name (SAN) matching at least one hostname in the zone where it’s being uploaded.</description></item><item><title>Renewing</title><link>https://panthere2k.github.io/ssl/edge-certificates/custom-certificates/renewing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://panthere2k.github.io/ssl/edge-certificates/custom-certificates/renewing/</guid><description>RenewingUploaded Certificates cannot be renewed by Cloudflare. You must ensure that you replace an expiring certificate before it expires, otherwise your visitors may not be able to connect.
Cloudflare automatically sends email notification 30 and 14 days before your custom certificate expires. Email is sent to users who have the SSL/TLS, Administrator, or Super Administrator roles.
When renewing a custom certificate, you can reuse a previously generated CSR. &amp;#8203;​ Expired certificates and Legacy Client Support For Modern custom certificates, Cloudflare removes expired certificates at expiration.</description></item><item><title>Bundle methodologies</title><link>https://panthere2k.github.io/ssl/edge-certificates/custom-certificates/bundling-methodologies/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://panthere2k.github.io/ssl/edge-certificates/custom-certificates/bundling-methodologies/</guid><description>Bundle methodologiesWhen an SSL certificate is deployed to the Cloudflare edge, it may be augmented with intermediate and root certificates to assist the user agent in finding a chain to a publicly trusted root. You can control the mechanics of how certificates are bundled by specifying a bundling methodology.
&amp;#8203;​ Compatible Compatible mode is the default and uses common and well distributed intermediate certificates to complete the chain, ensuring that the resulting bundle is compatible with as many clients as possible.</description></item><item><title>Add CAA records</title><link>https://panthere2k.github.io/ssl/edge-certificates/custom-certificates/caa-records/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://panthere2k.github.io/ssl/edge-certificates/custom-certificates/caa-records/</guid><description>Add CAA recordsA Certificate Authority Authorization (CAA) DNS record specifies which Certificate Authorities (CAs) are allowed to issue certificates for a domain. This record reduces the chance of unauthorized certificate issuance and promotes standardization across your organization. For additional security, set up Certificate Transparency Monitoring as well.
NoteFor more technical details about CAA records, refer to the introductory blog post External link icon Open external link .
&amp;#8203;​ Who should create CAA records?</description></item><item><title>Remove key file password</title><link>https://panthere2k.github.io/ssl/edge-certificates/custom-certificates/remove-file-key-password/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://panthere2k.github.io/ssl/edge-certificates/custom-certificates/remove-file-key-password/</guid><description>Remove key file passwordYou cannot upload a custom certificate with a password-protected key file.
The process for removing the password depends on your operating system. The following examples remove the password from example.com.key.
Linux Open a command console.
Navigate to the directory containing the example.com.key file.
Copy the original key.
$ cp example.com.key temp.key Run the following command (if using an ECDSA certificate, replace rsa with ec).
$ openssl rsa -in temp.</description></item></channel></rss>