<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Security on Security365 Docs</title><link>https://panthere2k.github.io/api-shield/security/</link><description>Recent content in Security on Security365 Docs</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://panthere2k.github.io/api-shield/security/index.xml" rel="self" type="application/rss+xml"/><item><title>API Discovery</title><link>https://panthere2k.github.io/api-shield/security/api-discovery/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://panthere2k.github.io/api-shield/security/api-discovery/</guid><description>API DiscoveryMost development teams struggle to keep track of their APIs. Cloudflare API Discovery helps you map out and understand your attack surface area.
&amp;#8203;​ Process Cloudflare produces a simple, trustworthy map of API endpoints through a process of path normalization.
For example, you might have thousands of APIs, but a lot of the calls look similar, such as:
api.example.com/login/238 api.example.com/login/392 Both paths serve a similar purpose — allowing users to log in to their accounts — but they are not identical.</description></item><item><title>Volumetric Abuse Detection</title><link>https://panthere2k.github.io/api-shield/security/volumetric-abuse-detection/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://panthere2k.github.io/api-shield/security/volumetric-abuse-detection/</guid><description>Volumetric Abuse DetectionCloudflare Volumetric Abuse Detection helps you set up a system of adaptive rate limiting.
&amp;#8203;​ Process After API Discovery, Cloudflare looks for endpoint abuse based on common user traffic.
For example, your API might see different levels of traffic to a /reset-password endpoint than a /login endpoint. Additionally, your /login endpoint might see higher than average traffic after a successful marketing campaign.
These two scenarios speak to the limitations of traditional rate limiting.</description></item><item><title>Sequential Abuse Detection (Beta)</title><link>https://panthere2k.github.io/api-shield/security/sequential-abuse-detection/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://panthere2k.github.io/api-shield/security/sequential-abuse-detection/</guid><description>Sequential Abuse Detection (Beta)Sequential Abuse Detection uncovers endpoint abuse by looking for irregular traffic across multiple endpoints.
&amp;#8203;​ Process Requests tend to come to endpoints in predictable patterns. For example, a login process might consist of the following:
A request is sent to /login/*/enter. It is redirected to /login/*/verify. It is finally redirected to /login-successful. When requests go straight to /login-successful, they are not following the typical pattern and might be malicious.</description></item></channel></rss>