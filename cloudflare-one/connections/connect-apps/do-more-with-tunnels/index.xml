<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Do more with Tunnel on Security365 Docs</title><link>https://panthere2k.github.io/cloudflare-one/connections/connect-apps/do-more-with-tunnels/</link><description>Recent content in Do more with Tunnel on Security365 Docs</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://panthere2k.github.io/cloudflare-one/connections/connect-apps/do-more-with-tunnels/index.xml" rel="self" type="application/rss+xml"/><item><title>Secure the server</title><link>https://panthere2k.github.io/cloudflare-one/connections/connect-apps/do-more-with-tunnels/secure-server/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://panthere2k.github.io/cloudflare-one/connections/connect-apps/do-more-with-tunnels/secure-server/</guid><description>Secure the server Before you startMake sure you follow our guide to create, configure, and run a tunnel. Once you can successfully run a tunnel to proxy incoming traffic to any number of services running locally on your origin, you can lock down your origin to block out potentially malicious incoming traffic. By disallowing all ingress traffic and allowing only egress traffic, you can avoid “poking holes” on your server&amp;rsquo;s firewall while exposing only the services you specified in the tunnel&amp;rsquo;s config.</description></item><item><title>Ports and IPs</title><link>https://panthere2k.github.io/cloudflare-one/connections/connect-apps/do-more-with-tunnels/ports-and-ips/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://panthere2k.github.io/cloudflare-one/connections/connect-apps/do-more-with-tunnels/ports-and-ips/</guid><description>Ports and IPsUsers can implement a positive security model with Cloudflare Tunnel by restricting traffic originating from cloudflared. The parameters below can be configured for egress traffic inside of a firewall.
Destination Port Protocols region1.v2.argotunnel.com 7844 TCP/UDP (h2mux, http2, and quic) region2.v2.argotunnel.com 7844 TCP/UDP (h2mux, http2, and quic) api.cloudflare.com 443 TCP (HTTPS) update.argotunnel.com 443 TCP (HTTPS) Opening port 443 for connections to update.argotunnel.com is optional. Failure to do so will prompt a log error, but cloudflared will still run correctly.</description></item><item><title>Migrate legacy tunnels</title><link>https://panthere2k.github.io/cloudflare-one/connections/connect-apps/do-more-with-tunnels/migrate-legacy-tunnels/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://panthere2k.github.io/cloudflare-one/connections/connect-apps/do-more-with-tunnels/migrate-legacy-tunnels/</guid><description>Migrate legacy tunnels to named tunnels Before you start Download the latest version of cloudflared Obtain a new origin certificate by running cloudflared login. While named tunnels are scoped to an account, for legacy reasons the login page requires selecting a zone. Originally, a Cloudflare Tunnel connection corresponded to a DNS record in your account. Requests to that hostname hit Cloudflare’s network first and our edge sends those requests over the tunnel to your origin.</description></item><item><title>Quick Tunnels</title><link>https://panthere2k.github.io/cloudflare-one/connections/connect-apps/do-more-with-tunnels/trycloudflare/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://panthere2k.github.io/cloudflare-one/connections/connect-apps/do-more-with-tunnels/trycloudflare/</guid><description>Quick TunnelsDevelopers can use the TryCloudflare tool to experiment with Cloudflare Tunnel without adding a site to Cloudflare&amp;rsquo;s DNS. TryCloudflare will launch a process that generates a random subdomain on trycloudflare.com. Requests to that subdomain will be proxied through the Cloudflare network to your web server running on localhost.
&amp;#8203;​ Using TryCloudflare Follow these instructions to install cloudflared. If you have an older copy, update to 2019.4.0 or later. Launch a web server that is available over localhost to cloudflared.</description></item><item><title>Tunnel hosting requirements</title><link>https://panthere2k.github.io/cloudflare-one/connections/connect-apps/do-more-with-tunnels/hosting-requirements/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://panthere2k.github.io/cloudflare-one/connections/connect-apps/do-more-with-tunnels/hosting-requirements/</guid><description>Tunnel hosting requirementsRunning cloudflared instances on a server and proxying traffic through it requires computing resources such as CPU and memory on the server. The actual amount of resource usage depends on many variables, including the number of requests per second, bandwidth, network path and hardware. Our connector, cloudflared, was designed to be lightweight and flexible enough to be effectively deployed on Raspberry Pi, your laptop or a server running your data center.</description></item><item><title>Grafana Dashboard for Tunnels</title><link>https://panthere2k.github.io/cloudflare-one/connections/connect-apps/do-more-with-tunnels/grafana/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://panthere2k.github.io/cloudflare-one/connections/connect-apps/do-more-with-tunnels/grafana/</guid><description>Monitoring Tunnels with GrafanaWhen a Tunnel is run, cloudflared will automatically spin up a metrics server. This metrics server can be routed to Prometheus and Grafana in order to convert the metrics into actionable insights.
By default, the port that metrics are sent to is randomly selected and can be found by viewing Tunnels logs as seen below:
The port is highlighted in the above image.
However, it can also be manually set with the following configuration.</description></item></channel></rss>