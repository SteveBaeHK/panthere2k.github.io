<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Logpush examples on Security365 Docs</title><link>https://panthere2k.github.io/logs/tutorials/examples/</link><description>Recent content in Logpush examples on Security365 Docs</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://panthere2k.github.io/logs/tutorials/examples/index.xml" rel="self" type="application/rss+xml"/><item><title>Manage Logpush with cURL</title><link>https://panthere2k.github.io/logs/tutorials/examples/example-logpush-curl/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://panthere2k.github.io/logs/tutorials/examples/example-logpush-curl/</guid><description>Manage Logpush with cURLYou can manage your Cloudflare Logpush service from the command line using cURL.
Before getting started, review:
API configuration Logpush job object definition The examples below are for zone-scoped datasets. Account-scoped datasets should use /accounts/&amp;lt;ACCOUNT_ID&amp;gt; instead of /zone/&amp;lt;ZONE_ID&amp;gt;. &amp;#8203;â€‹ Step 1 - Get ownership challenge $ curl -s -XPOST https://api.cloudflare.com/client/v4/zones/&amp;lt;ZONE_ID&amp;gt;/logpush/ownership \ -H &amp;#34;X-Auth-Email: &amp;lt;EMAIL&amp;gt;&amp;#34; \ -H &amp;#34;X-Auth-Key: &amp;lt;API_KEY&amp;gt;&amp;#34; \ -H &amp;#34;Content-Type: application/json&amp;#34; \ --data &amp;#39;{&amp;#34;destination_conf&amp;#34;:&amp;#34;s3://&amp;lt;BUCKET_PATH&amp;gt;?region=us-west-2&amp;#34;}&amp;#39; | jq .</description></item><item><title>Manage Logpush with Python</title><link>https://panthere2k.github.io/logs/tutorials/examples/example-logpush-python/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://panthere2k.github.io/logs/tutorials/examples/example-logpush-python/</guid><description>Manage Logpush with PythonThe examples below are for zone-scoped datasets. Account-scoped datasets should use &amp;lt;ACCOUNT_ID&amp;gt; instead of &amp;lt;ZONE_ID&amp;gt;. import json import requests url = &amp;#34;https://api.cloudflare.com/client/v4/&amp;#34; x_auth_email = &amp;#34;&amp;lt;EMAIL&amp;gt;&amp;#34; x_auth_key = &amp;#34;&amp;lt;API_KEY&amp;gt;&amp;#34; zone_id = &amp;#34;&amp;lt;ZONE_ID&amp;gt;&amp;#34; destination_conf = &amp;#34;s3://&amp;lt;BUCKET_NAME&amp;gt;/logs?region=us-west-1&amp;#34; logpush_url = url + &amp;#34;/zones/%s/logpush&amp;#34; % zone_id headers = { &amp;#39;X-Auth-Email&amp;#39;: &amp;lt;EMAIL&amp;gt;, &amp;#39;X-Auth-Key&amp;#39;: &amp;lt;API_KEY&amp;gt;, &amp;#39;Content-Type&amp;#39;: &amp;#39;application/json&amp;#39; } # Create job r = requests.post(logpush_url + &amp;#34;/jobs&amp;#34;, headers=headers, data=json.dumps({&amp;#34;destination_conf&amp;#34;:destination_conf})) print(r.status_code, r.text) assert r.status_code == 201 assert r.</description></item></channel></rss>