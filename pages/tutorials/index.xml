<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tutorials on Security365 Docs</title><link>https://panthere2k.github.io/pages/tutorials/</link><description>Recent content in Tutorials on Security365 Docs</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://panthere2k.github.io/pages/tutorials/index.xml" rel="self" type="application/rss+xml"/><item><title>Add a React form with Formspree</title><link>https://panthere2k.github.io/pages/tutorials/add-a-react-form-with-formspree/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://panthere2k.github.io/pages/tutorials/add-a-react-form-with-formspree/</guid><description>Add a React form with FormspreeAlmost every React website needs a form to collect user data. Formspree External link icon Open external link is a back-end service that handles form processing and storage, allowing developers to include forms on their website without writing server-side code or functions.
In this tutorial, you will create a &amp;lt;form&amp;gt; component using React and add it to a single page application built with create-react-app. Though you are using create-react-app (CRA), the concepts will apply to any React framework including Next.</description></item><item><title>Add an HTML form with Formspree</title><link>https://panthere2k.github.io/pages/tutorials/add-an-html-form-with-formspree/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://panthere2k.github.io/pages/tutorials/add-an-html-form-with-formspree/</guid><description>Add an HTML form with FormspreeAlmost every website, whether it is a simple HTML portfolio page or a complex JavaScript application, will need a form to collect user data. Formspree External link icon Open external link is a back-end service that handles form processing and storage, allowing developers to include forms on their website without writing server-side code or functions.
In this tutorial, you will create a &amp;lt;form&amp;gt; using plain HTML and CSS and add it to a static HTML website hosted on Cloudflare Pages.</description></item><item><title>Build a blog using Nuxt.js and Sanity.io on Cloudflare Pages</title><link>https://panthere2k.github.io/pages/tutorials/build-a-blog-using-nuxt-and-sanity/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://panthere2k.github.io/pages/tutorials/build-a-blog-using-nuxt-and-sanity/</guid><description>Build a blog using Nuxt.js and Sanity.io on Cloudflare Pages &amp;#8203;​ Introduction In this tutorial, you will build a blog application using Nuxt.js and Sanity.io and deploy it on Cloudflare Pages. Nuxt.js is a powerful static site generator built on the front-end framework Vue.js. Sanity.io is a headless CMS tool built for managing your application&amp;rsquo;s data without needing to maintain a database.
&amp;#8203;​ Prerequisites A recent version of NPM External link icon Open external link on your computer A Sanity.</description></item><item><title>Build an API for your front end using Cloudflare Workers</title><link>https://panthere2k.github.io/pages/tutorials/build-an-api-with-workers/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://panthere2k.github.io/pages/tutorials/build-an-api-with-workers/</guid><description>Build an API for your front end using Cloudflare Workers &amp;#8203;​ Introduction In this tutorial, you will build an API on Cloudflare Workers External link icon Open external link that can be used by your Pages application. Workers serve as a great companion to your front-end applications on Cloudflare Pages. In this tutorial, you will build a simple JSON API that returns blog posts that can be retrieved and rendered in a front-end application.</description></item><item><title>Create an HTML form</title><link>https://panthere2k.github.io/pages/tutorials/forms/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://panthere2k.github.io/pages/tutorials/forms/</guid><description>Create an HTML formIn this tutorial, you will create a simple &amp;lt;form&amp;gt; using plain HTML and CSS and deploy it to Cloudflare Pages. While doing so, you will learn about some of the HTML form attributes and how to collect submitted data within a Worker.
MDN Introductory SeriesThis tutorial will briefly touch upon the basics of HTML forms. For a more in-depth overview, refer to MDN&amp;rsquo;s Web Forms – Working with user data External link icon Open external link introductory series.</description></item></channel></rss>