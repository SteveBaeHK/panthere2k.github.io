<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Rules language on Security365 Docs</title><link>https://panthere2k.github.io/ruleset-engine/rules-language/</link><description>Recent content in Rules language on Security365 Docs</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://panthere2k.github.io/ruleset-engine/rules-language/index.xml" rel="self" type="application/rss+xml"/><item><title>Expressions</title><link>https://panthere2k.github.io/ruleset-engine/rules-language/expressions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://panthere2k.github.io/ruleset-engine/rules-language/expressions/</guid><description>Rule expressionsThe Rules language supports two kinds of expressions: simple and compound.
&amp;#8203;​ Simple expressions Simple expressions compare a value from an HTTP request to a value defined in the expression. For example, this simple expression matches Microsoft Exchange Autodiscover requests:
http.request.uri.path matches &amp;#34;/autodiscover\.(xml|src)$&amp;#34; Simple expressions have the following syntax:
&amp;lt;field&amp;gt; &amp;lt;comparison_operator&amp;gt; &amp;lt;value&amp;gt; Where:
Fields specify properties associated with an HTTP request.
Comparison operators define how values must relate to actual request data for an expression to return true.</description></item><item><title>Operators and grouping symbols</title><link>https://panthere2k.github.io/ruleset-engine/rules-language/operators/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://panthere2k.github.io/ruleset-engine/rules-language/operators/</guid><description>Rule operators and grouping symbolsThe Cloudflare Rules language supports comparison and logical operators:
Comparison operators specify how values defined in an expression must relate to the actual HTTP request value for the expression to return true. Logical operators combine two expressions to form a compound expression and use order of precedence to determine how an expression is evaluated. Grouping symbols allow you to organize expressions, enforce precedence, and nest expressions.</description></item><item><title>Values</title><link>https://panthere2k.github.io/ruleset-engine/rules-language/values/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://panthere2k.github.io/ruleset-engine/rules-language/values/</guid><description>ValuesWhen an HTTP request reaches Cloudflare’s edge, Cloudflare creates a table of field–value pairs against which to match expressions. This table exists for as long as the current request is being processed.
The values that populate the lookup tables of the Rules language are drawn from a variety of sources:
Primitive properties are obtained directly from the request (http.request.uri.path, for example). Derived values are the product of a transformation, composition, or basic operation.</description></item><item><title>Actions</title><link>https://panthere2k.github.io/ruleset-engine/rules-language/actions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://panthere2k.github.io/ruleset-engine/rules-language/actions/</guid><description>Actions referenceThe action of a rule tells Cloudflare how to handle matches for the rule expression.
&amp;#8203;​ Supported actions The table below lists the actions available in the Rules language.
Some actions, like Block, will stop the evaluation of the remaining rules. The Skip action will skip the evaluation of some rules when there is a match, but the exact behavior will depend on the rule configuration.
The available actions depend on the phase where you are configuring the rule.</description></item><item><title>Fields</title><link>https://panthere2k.github.io/ruleset-engine/rules-language/fields/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://panthere2k.github.io/ruleset-engine/rules-language/fields/</guid><description>Fields referenceThe Cloudflare Rules language supports a range of field types:
Standard fields represent common, typically static properties of an HTTP request. Dynamic fields represent computed or derived values, typically related to Cloudflare threat intelligence about the request. URI argument and value fields are extracted from the request. HTTP request header fields represent the names and values associated with HTTP request headers. HTTP request body fields represent the properties of an HTTP request body, including forms, for example.</description></item><item><title>Functions</title><link>https://panthere2k.github.io/ruleset-engine/rules-language/functions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://panthere2k.github.io/ruleset-engine/rules-language/functions/</guid><description>Functions referenceThe Cloudflare Rules language provides functions for manipulating and validating values in an expression:
Transformation functions manipulate values extracted from an HTTP request. The HMAC validation function tests the validity of an HMAC token. Use it to write expressions that target requests based on the presence of a valid HMAC token. &amp;#8203;​ Transformation functions The Rules language supports several functions that transform values extracted from HTTP requests. A common use case for transformation functions is the conversion of a string of characters to uppercase or lowercase, since by default, string evaluation is case sensitive.</description></item></channel></rss>