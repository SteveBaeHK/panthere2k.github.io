<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Integrations on Security365 Docs</title><link>https://panthere2k.github.io/workers/learning/integrations/</link><description>Recent content in Integrations on Security365 Docs</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://panthere2k.github.io/workers/learning/integrations/index.xml" rel="self" type="application/rss+xml"/><item><title>APIs</title><link>https://panthere2k.github.io/workers/learning/integrations/apis/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://panthere2k.github.io/workers/learning/integrations/apis/</guid><description>APIsTo integrate with third party APIs from Cloudflare Workers, use the fetch API to make HTTP requests to the API endpoint. Then use the response data to modify or manipulate your content as needed.
For example, if you want to integrate with a weather API, make a fetch request to the API endpoint and retrieve the current weather data. Then use this data to display the current weather conditions on your website.</description></item><item><title>Databases</title><link>https://panthere2k.github.io/workers/learning/integrations/databases/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://panthere2k.github.io/workers/learning/integrations/databases/</guid><description>DatabasesUse Cloudflare Workers to connect your application to external databases, such as Postgres, MySQL, FaunaDB, Supabase, MongoDB Atlas, Planetscale, Prisma, and more. To use these Cloudflare Workers integrations, you need to install the relevant packages for the databases you want to use.
Database Library or Driver Connection Method Postgres deno-postgres External link icon Open external link Cloudflare Tunnel MySQL deno-mysql External link icon Open external link Cloudflare Tunnel FaunaDB External link icon Open external link faunadb External link icon Open external link API via client library Planetscale External link icon Open external link @planetscale/database External link icon Open external link API via client library Supabase External link icon Open external link @supabase/supabase-js External link icon Open external link API via client library Mongo External link icon Open external link realm-web External link icon Open external link API via client library Prisma External link icon Open external link prisma External link icon Open external link API via client library Neon External link icon Open external link @neondatabase/serverless External link icon Open external link API via client library Hasura External link icon Open external link API GraphQL API via fetch() Don&amp;rsquo;t see an integration listed, or have an integration to submit?</description></item><item><title>External Services</title><link>https://panthere2k.github.io/workers/learning/integrations/external-services/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://panthere2k.github.io/workers/learning/integrations/external-services/</guid><description>External ServicesMany external services provide libraries and SDKs to interact with their APIs. While many Node-compatible libraries work on Workers right out of the box, some, which implement fs, http/net, or access the browser window don&amp;rsquo;t directly translate to the Workers runtime, which is v8-based.
For a list of working packages, refer to Works on Workers External link icon Open external link .
Don&amp;rsquo;t see an integration listed, or have an integration to submit?</description></item></channel></rss>