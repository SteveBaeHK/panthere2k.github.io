<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Cloudflare Filters API on Security365 Docs</title><link>https://panthere2k.github.io/firewall/api/cf-filters/</link><description>Recent content in Cloudflare Filters API on Security365 Docs</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://panthere2k.github.io/firewall/api/cf-filters/index.xml" rel="self" type="application/rss+xml"/><item><title>What is a filter?</title><link>https://panthere2k.github.io/firewall/api/cf-filters/what-is-a-filter/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://panthere2k.github.io/firewall/api/cf-filters/what-is-a-filter/</guid><description>What is a filter?A filter is a way of saying:
if (traffic matches certain criteria) then... A filter contains an expression that would return true or false when evaluated against traffic passing through Cloudflare.
Filter expressions are human and machine readable, and you can compose complex logic to precisely match the traffic that you are interested in detecting and acting upon.
A filter object typically looks like the following:</description></item><item><title>JSON object</title><link>https://panthere2k.github.io/firewall/api/cf-filters/json-object/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://panthere2k.github.io/firewall/api/cf-filters/json-object/</guid><description>Filter JSON object &amp;#8203;​ Filter object structure and properties A JSON response for the Filters API has this structure:
{ &amp;#34;id&amp;#34;: &amp;#34;6f58318e7fa2477a23112e8118c66f61&amp;#34;, &amp;#34;expression&amp;#34;: &amp;#34;http.request.uri.path ~ \&amp;#34;^.*/wp-login.php$\&amp;#34; or http.request.uri.path ~ \&amp;#34;^.*/xmlrpc.php$\&amp;#34;&amp;#34;, &amp;#34;paused&amp;#34;: true, &amp;#34;description&amp;#34;: &amp;#34;WordPress login paths&amp;#34;, &amp;#34;ref&amp;#34;: &amp;#34;&amp;#34; } The following table summarizes the object properties:
Property Description Constraints id
String A UUIDv4 identifier generated by Cloudflare. Unique, read only
Length: 32 characters
expression
String A Rules language expression used to evaluate requests.</description></item><item><title>Endpoints</title><link>https://panthere2k.github.io/firewall/api/cf-filters/endpoints/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://panthere2k.github.io/firewall/api/cf-filters/endpoints/</guid><description>EndpointsTo invoke a Cloudflare Filters API operation, append the endpoint to the Cloudflare API base URL:
https://api.cloudflare.com/client/v4/ For authentication instructions, refer to Getting Started: Requests in the Cloudflare API documentation.
For help with endpoints and pagination, refer to Getting Started: Endpoints.
The Filters API endpoints require a value for &amp;lt;ZONE_ID&amp;gt;.
To retrieve a list of zones associated with your account, use the List Zones operation and note the Zone ID associated with the domain for which you want to manage filters.</description></item><item><title>POST example</title><link>https://panthere2k.github.io/firewall/api/cf-filters/post/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://panthere2k.github.io/firewall/api/cf-filters/post/</guid><description>POST exampleThis example creates several filters using a single API call.
--- header: Request --- curl -X POST \ &amp;#34;https://api.cloudflare.com/client/v4/zones/&amp;lt;ZONE_ID&amp;gt;/filters&amp;#34; \ -H &amp;#34;X-Auth-Email: &amp;lt;EMAIL&amp;gt;&amp;#34; \ -H &amp;#34;X-Auth-Key: &amp;lt;API_KEY&amp;gt;&amp;#34; \ -H &amp;#34;Content-Type: application/json&amp;#34; \ -d &amp;#39;[ { &amp;#34;expression&amp;#34;: &amp;#34;ip.src eq 93.184.216.0&amp;#34; }, { &amp;#34;expression&amp;#34;: &amp;#34;http.request.uri.path matches \&amp;#34;^/api/.*$\&amp;#34;&amp;#34;, &amp;#34;description&amp;#34;: &amp;#34;/api&amp;#34; }, { &amp;#34;expression&amp;#34;: &amp;#34;not http.request.uri.path matches \&amp;#34;^/api/.*$\&amp;#34;&amp;#34;, &amp;#34;description&amp;#34;: &amp;#34;not /api&amp;#34; }, { &amp;#34;expression&amp;#34;: &amp;#34;(http.request.uri.path ~ \&amp;#34;^.*/wp-login.php$\&amp;#34; or http.request.uri.path ~ \&amp;#34;^.*/xmlrpc.php$\&amp;#34;)&amp;#34;, &amp;#34;description&amp;#34;: &amp;#34;Login&amp;#34; }, { &amp;#34;expression&amp;#34;: &amp;#34;ip.</description></item><item><title>GET examples</title><link>https://panthere2k.github.io/firewall/api/cf-filters/get/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://panthere2k.github.io/firewall/api/cf-filters/get/</guid><description>GET examples &amp;#8203;​ Get all filters This example returns all filters in zone with ID &amp;lt;ZONE_ID&amp;gt;.
--- header: Request --- curl -X GET \ &amp;#34;https://api.cloudflare.com/client/v4/zones/&amp;lt;ZONE_ID&amp;gt;/filters&amp;#34; \ -H &amp;#34;X-Auth-Email: &amp;lt;EMAIL&amp;gt;&amp;#34; \ -H &amp;#34;X-Auth-Key: &amp;lt;API_KEY&amp;gt;&amp;#34; --- header: Response --- { &amp;#34;result&amp;#34;: [ { &amp;#34;id&amp;#34;: &amp;#34;&amp;lt;FILTER_ID_1&amp;gt;&amp;#34;, &amp;#34;paused&amp;#34;: false, &amp;#34;description&amp;#34;: &amp;#34;Login from office&amp;#34;, &amp;#34;expression&amp;#34;: &amp;#34;ip.src eq 93.184.216.0 and (http.request.uri.path ~ \&amp;#34;^.*/wp-login.php$\&amp;#34; or http.request.uri.path ~ \&amp;#34;^.*/xmlrpc.php$\&amp;#34;)&amp;#34; }, { &amp;#34;id&amp;#34;: &amp;#34;&amp;lt;FILTER_ID_2&amp;gt;&amp;#34;, &amp;#34;paused&amp;#34;: false, &amp;#34;description&amp;#34;: &amp;#34;Login&amp;#34;, &amp;#34;expression&amp;#34;: &amp;#34;(http.</description></item><item><title>PUT examples</title><link>https://panthere2k.github.io/firewall/api/cf-filters/put/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://panthere2k.github.io/firewall/api/cf-filters/put/</guid><description>PUT examples &amp;#8203;​ Update multiple filters This example updates two filters with IDs &amp;lt;FILTER_ID_1&amp;gt; and &amp;lt;FILTER_ID_2&amp;gt; using a single API call.
--- header: Request --- curl -X PUT \ &amp;#34;https://api.cloudflare.com/client/v4/zones/&amp;lt;ZONE_ID&amp;gt;/filters&amp;#34; \ -H &amp;#34;X-Auth-Email: &amp;lt;EMAIL&amp;gt;&amp;#34; \ -H &amp;#34;X-Auth-Key: &amp;lt;API_KEY&amp;gt;&amp;#34; \ -H &amp;#34;Content-Type: application/json&amp;#34; \ -d &amp;#39;[ { &amp;#34;id&amp;#34;: &amp;#34;&amp;lt;FILTER_ID_1&amp;gt;&amp;#34;, &amp;#34;paused&amp;#34;: false, &amp;#34;expression&amp;#34;: &amp;#34;ip.src eq 93.184.216.0&amp;#34;, &amp;#34;description&amp;#34;: &amp;#34;IP of example.org&amp;#34; }, { &amp;#34;id&amp;#34;: &amp;#34;&amp;lt;FILTER_ID_2&amp;gt;&amp;#34;, &amp;#34;expression&amp;#34;: &amp;#34;http.request.uri.path matches \&amp;#34;^/api/.*$\&amp;#34;&amp;#34;, &amp;#34;description&amp;#34;: &amp;#34;/api&amp;#34; } ]&amp;#39; --- header: Response --- { &amp;#34;result&amp;#34;: [ { &amp;#34;id&amp;#34;: &amp;#34;&amp;lt;FILTER_ID&amp;gt;&amp;#34;, &amp;#34;paused&amp;#34;: false, &amp;#34;description&amp;#34;: &amp;#34;IP of example.</description></item><item><title>DELETE examples</title><link>https://panthere2k.github.io/firewall/api/cf-filters/delete/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://panthere2k.github.io/firewall/api/cf-filters/delete/</guid><description>DELETE examples &amp;#8203;​ Delete multiple filters This example deletes filters with IDs &amp;lt;FILTER_ID_1&amp;gt; and &amp;lt;FILTER_ID_2&amp;gt;.
--- header: Request --- curl -X DELETE \ &amp;#34;https://api.cloudflare.com/client/v4/zones/&amp;lt;ZONE_ID&amp;gt;/filters?id=&amp;lt;FILTER_ID_1&amp;gt;&amp;amp;id=&amp;lt;FILTER_ID_2&amp;gt;&amp;#34; \ -H &amp;#34;X-Auth-Email: &amp;lt;EMAIL&amp;gt;&amp;#34; \ -H &amp;#34;X-Auth-Key: &amp;lt;API_KEY&amp;gt;&amp;#34; --- header: Response --- { &amp;#34;result&amp;#34;: [ { &amp;#34;id&amp;#34;: &amp;#34;&amp;lt;FILTER_ID_1&amp;gt;&amp;#34; }, { &amp;#34;id&amp;#34;: &amp;#34;&amp;lt;FILTER_ID_2&amp;gt;&amp;#34; } ], &amp;#34;success&amp;#34;: true, &amp;#34;errors&amp;#34;: [], &amp;#34;messages&amp;#34;: [] } &amp;#8203;​ Delete a single filter This example deletes a single filter with ID &amp;lt;FILTER_ID&amp;gt;.</description></item><item><title>Expression validation</title><link>https://panthere2k.github.io/firewall/api/cf-filters/validation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://panthere2k.github.io/firewall/api/cf-filters/validation/</guid><description>Expression validationThe Cloudflare Filters API supports an endpoint for validating expressions.
Operation Method + Endpoint Notes Validate expression via query string (?expression=) GET /filters/validate-expr Allows testing and validating expressions without changing your configuration. Validate expression via JSON object POST /filters/validate-expr Allows testing and validating expressions without changing your configuration. &amp;#8203;​ Examples &amp;#8203;​ Validate expression via query string --- header: Request --- curl -X GET \ &amp;#39;https://api.cloudflare.com/client/v4/filters/validate-expr?expression=ip.src==34&amp;#39; \ -H &amp;#34;X-Auth-Email: &amp;lt;EMAIL&amp;gt;&amp;#34; \ -H &amp;#34;X-Auth-Key: &amp;lt;API_KEY&amp;gt;&amp;#34; --- header: Response --- { &amp;#34;result&amp;#34;: null, &amp;#34;success&amp;#34;: false, &amp;#34;errors&amp;#34;: [ { &amp;#34;message&amp;#34;: &amp;#34;Filter parsing error:\n`ip.</description></item></channel></rss>