<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Reference on Security365 Docs</title><link>https://panthere2k.github.io/automatic-platform-optimization/reference/</link><description>Recent content in Reference on Security365 Docs</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://panthere2k.github.io/automatic-platform-optimization/reference/index.xml" rel="self" type="application/rss+xml"/><item><title>Query parameters and cached responses</title><link>https://panthere2k.github.io/automatic-platform-optimization/reference/query-parameters/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://panthere2k.github.io/automatic-platform-optimization/reference/query-parameters/</guid><description>Query parameters and cached responsesQuery parameters often signal the presence of dynamic content. As a result, if there are query parameters in the URL, APO bypasses the cache and attempts to get a new version of the page from the origin by default. Because query parameters are also often used for marketing attribution, like UTMs, quick loading times are especially important for users.
To add a query parameter to our allowlist, create a post in the community External link icon Open external link for consideration.</description></item><item><title>Page Rule integration with APO</title><link>https://panthere2k.github.io/automatic-platform-optimization/reference/page-rule-integration/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://panthere2k.github.io/automatic-platform-optimization/reference/page-rule-integration/</guid><description>Page Rule integration with APOThe following Page rules can control APO. Any changes to Caching page rules require purging the cache for the changes to take effect.
Cache Level: Bypass — APO bypasses pages with response header cf-apo-via: origin,page-rules
Cache Level: Ignore Query String — APO ignores all query strings when serving from Cache.
Cache Level: Cache Everything — APO caches pages with all query strings.
Automatic page purge via the WordPress plugin won’t clean all cached pages, only pages without query strings.</description></item><item><title>Cache by device type</title><link>https://panthere2k.github.io/automatic-platform-optimization/reference/cache-device-type/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://panthere2k.github.io/automatic-platform-optimization/reference/cache-device-type/</guid><description>Cache by device typeAPO cache by device type provides all of the same benefits of Cloudflare&amp;rsquo;s cache while targeting visitors with content appropriate to their device. Cloudflare evaluates the User-Agent header in the HTTP request to identify the device type. Cloudflare then identifies each device type with a case insensitive match to the regex below:
Mobile: (?:phone|windows\s+phone|ipod|blackberry|(?:android|bb\d+|meego|silk|googlebot) .+? mobile|palm|windows\s+ce|opera\ mini|avantgo|mobilesafari|docomo) Tablet: (?:ipad|playbook|(?:android|bb\d+|meego|silk)(?! .+? mobile)) Desktop: Everything else not matched above.</description></item><item><title>Subdomains and subdirectories</title><link>https://panthere2k.github.io/automatic-platform-optimization/reference/subdomain-subdirectories/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://panthere2k.github.io/automatic-platform-optimization/reference/subdomain-subdirectories/</guid><description>Subdomains and subdirectories &amp;#8203;​ Run APO on a subdomain After you enable APO, you configure it to run on the subdomain that uses WordPress. For example, if you have a website called www.mysite.com which includes a subdomain running WordPress called shop.mysite.com, you would configure APO to run on the shop.mysite.com subdomain.
Install version 4.4.0 or later of the Cloudflare WordPress plugin. Log in using Cloudflare API token or Global key.</description></item></channel></rss>