<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Get started on Security365 Docs</title><link>https://panthere2k.github.io/analytics/graphql-api/getting-started/</link><description>Recent content in Get started on Security365 Docs</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://panthere2k.github.io/analytics/graphql-api/getting-started/index.xml" rel="self" type="application/rss+xml"/><item><title>Querying basics</title><link>https://panthere2k.github.io/analytics/graphql-api/getting-started/querying-basics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://panthere2k.github.io/analytics/graphql-api/getting-started/querying-basics/</guid><description>Querying basics &amp;#8203;​ Structure of a GraphQL query GraphQL structures data as a graph. GraphQL uses a schema to define the objects and their hierarchy in your data graph. You can explore the edges of the graph by using queries to get the needed data. These queries must respect the structure of the schema.
A node, followed by its fields, is at the core of a GraphQL query. A node is an object of a specific type; the type specifies the fields that make up the object.</description></item><item><title>Explore the GraphQL schema</title><link>https://panthere2k.github.io/analytics/graphql-api/getting-started/explore-graphql-schema/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://panthere2k.github.io/analytics/graphql-api/getting-started/explore-graphql-schema/</guid><description>Explore the GraphQL schemaMany GraphQL clients are support browsing GraphQL schema by taking care of introspection. In this page, we will cover GraphiQL and Altair clients.
GraphiQL External link icon Open external link and Altair External link icon Open external link are open-source GraphQL clients that provide a descent tool to compose a query, execute it, and inspect the results. And as a bonus, they also allow you to browse GraphQL schema.</description></item><item><title>Compose a query in GraphiQL</title><link>https://panthere2k.github.io/analytics/graphql-api/getting-started/compose-graphql-query/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://panthere2k.github.io/analytics/graphql-api/getting-started/compose-graphql-query/</guid><description>Compose a query in GraphiQLMany clients might need help using the semantics of GraphQL and exploring the possibilities of Cloudflare GraphQL API.
This page details how to use a GraphiQL client External link icon Open external link to compose and execute a GraphQL query.
&amp;#8203;​ Prerequisites You can find all details on how to configure a client here.
&amp;#8203;​ Set up a query and choose a dataset Click on the editing pane of GraphiQL and add this base query, replacing zone-id with your Cloudflare zone ID:</description></item><item><title>Execute a GraphQL query with curl</title><link>https://panthere2k.github.io/analytics/graphql-api/getting-started/execute-graphql-query/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://panthere2k.github.io/analytics/graphql-api/getting-started/execute-graphql-query/</guid><description>Execute a GraphQL query with curlUsing a plain curl to send a query provides the ability to slice-n-dice with the results and apply post-processing if needed. For example, converting results received from GraphQL API into a CSV format.
For more functionality, like auto-completion, schema exploring, etc., you can look at GraphQL clients.
GraphQL API expects JSON with two essentials fields: &amp;ldquo;query&amp;rdquo; and &amp;ldquo;variables&amp;rdquo;.
A query should be stripped from newline symbols and sent as a single-line string when the variables is an object full of values for all placeholders used in the query:</description></item></channel></rss>